<div id="content-no-sidebar" style="width: 760px;">
  <%= javascript_include_tag 'tooltip' %>
<div id="counseling_errors">
  <%= render :partial => 'help/counseling_errors', :locals => {'counseling' => @counseling} %>
</div>

<p class="intro border-bottom">To make sure you receive the right type of referral, PensionHelp America will guide you through a series of questions.  After you've answered each question, the grey NEXT button at the bottom of the page will turn yellow. Click it to continue on to the next question.</p>

<p>&nbsp;</p>

<% form_for :counseling, :url => {:action => :check_aoa_zip} do |form| -%>

<h3>Where are you located?</h3>

<p class="normal">Providing your Zip Code will allow us to look for a pension-help resource that is as close to your residence as possible.</p>

<p>
  <table>
    <tr>
      <td>Zip Code:</td>
      <td><%= form.text_field :zipcode, :size => 5 %></td>
    </tr>
  </table>
</p>

<br/>

<div id="aoa_expansion">
  <h3>Where did you work?</h3>

  <p class="normal">Some organizations provide assistance based on where the work occurred while earning the pension, where the company is headquartered, or where the benefit is being paid from.</p>

  <p id="work_state_abbrev">Where did the work occur: <%= select :counseling, :work_state_abbrev, @states, :include_blank => true %></p>

  <p id="hq_state_abbrev">Where is the company headquartered: <%= select :counseling, :hq_state_abbrev, @states, :include_blank => true %></p>

  <p id="pension_state_abbrev">Where is the pension paid from: <%= select :counseling, :pension_state_abbrev, @states, :include_blank => true %></p>
</div>
<% if !@ask_aoa || (@counseling.work_state_abbrev.blank? && @counseling.hq_state_abbrev.blank? && @counseling.pension_state_abbrev.blank? && !@show_aoa_expansion) %>
<script type="text/javascript">
  $('aoa_expansion').hide();
</script>
<% else %>
<script type="text/javascript">
  new Effect.Highlight('aoa_expansion');
</script>

<% end %>

  <%= image_submit_tag "/images/next-enabled.png", :id => 'nextLinkButton', :name => 'continue' %>

<% end -%>
<p>&nbsp;</p>

<p>&nbsp;</p>

<% if @zip_found && @show_aoa_expansion %>
  <script type="text/javascript">
    Event.observe( window, 'load', function() {
      /* Select observers */
      var selects = [$('counseling_work_state_abbrev'), $('counseling_hq_state_abbrev'),
        $('counseling_pension_state_abbrev')];

      for (i=0; i < selects.length; i++) {
        var select = selects[i];

        select.selectValidation = function selectValidation() {
          /* Paragraph with next question */
          var nextPar = this.up().next();
          if (this.value == '') {
            if (nextPar != null) {
              hideQuestions(nextPar);
            }
            changeStateNextStepButton(false);
          } else if (!hasState(this.value)) {
            if (nextPar == null) {
              changeStateNextStepButton(true);
            } else {
              $(nextPar).show();
              changeStateNextStepButton(false);
            }
          } else {
            changeStateNextStepButton(true);
            if (this.next() != null) {
              hideQuestions(nextPar);
            }
          }
        };
        Event.observe(select, 'change', select.selectValidation.bindAsEventListener(select))
      }

      /*Hide selects*/
      $('work_state_abbrev').show();
      $('hq_state_abbrev').hide();
      $('pension_state_abbrev').hide();
      /*Next step button disabled*/
      changeStateNextStepButton(false);
    });

    function hasState(state) {
      for (i = 0; i < aoa_states.length; i++) {
        if (aoa_states[i] == state) {
          return true;
        }
      }
      return false;
    }

    /* Hide questions from this to the end, questions has to be one after another in HTML!*/
    function hideQuestions(question) {
      if (question != null) {
        question.hide();
        question.down().value = '';
        hideQuestions(question.next());
      }
    }

    var aoa_states = new Array();
    <% for state in @aoa_states %>
      aoa_states.push('<%= state.abbrev %>');
    <% end %>

</script>
<% end %>

<script>
function changeStateNextStepButton(active) {
  var next_step_button = document.getElementById('nextLinkButton');
  if (active) {
    next_step_button.src = '/images/buttons/next_button.gif';
    next_step_button.onclick = function() {return true};
    Event.stopObserving( 'nextLinkButton', 'mouseover');
  } else {
    next_step_button.onclick = function() {return false};
    next_step_button.src = '/images/buttons/next_button_disabled.gif';
    Event.observe( 'nextLinkButton',  'mouseover', showTooltip );
    Event.observe( 'nextLinkButton',  'mouseout', hideTooltip );
  }
}
</script>

</div>